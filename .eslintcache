[{"C:\\Users\\dell\\Downloads\\MERNBootcamp-20201217T073832Z-001\\MERNBootcamp\\projfrontend\\src\\core\\PaymentB.js":"1","C:\\Users\\dell\\Downloads\\MERNBootcamp-20201217T073832Z-001\\MERNBootcamp\\projfrontend\\src\\admin\\ManageCatogories.js":"2"},{"size":3300,"mtime":1610031922313,"results":"3","hashOfConfig":"4"},{"size":2469,"mtime":1610032295426,"results":"5","hashOfConfig":"4"},{"filePath":"6","messages":"7","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"8","usedDeprecatedRules":"9"},"1tpbthv",{"filePath":"10","messages":"11","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\dell\\Downloads\\MERNBootcamp-20201217T073832Z-001\\MERNBootcamp\\projfrontend\\src\\core\\PaymentB.js",["12"],"import React,{useState,useEffect} from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { cartEmpty, loadCart } from './helper/CardHelper'\r\nimport { getmeToken, processPayment } from './helper/paymentBhelper'\r\nimport DropIn from 'braintree-web-drop-in-react'\r\nimport { isAuthenticated } from '../auth/helper'\r\nimport { createOrder } from './helper/OrderHelper'\r\n\r\nconst PaymentB = ({products,setreload= f => f,reload = undefined}) => {\r\n    \r\n    const [info,setInfo] = useState({\r\n        loading:false,\r\n        success:false,\r\n        clientToken:null,\r\n        error:'',\r\n        instance:{}\r\n    });\r\n\r\nconst userId = isAuthenticated()&& isAuthenticated().user._id;\r\nconst token = isAuthenticated()&& isAuthenticated().token;\r\n\r\n\r\n    const getToken = (userId,token) => {\r\ngetmeToken(userId,token).then(info => {\r\n     console.log(\"INformation\",info)\r\n    if(info.error)\r\n    {\r\n        setInfo({...info,error:info.error})\r\n    }\r\n    else{\r\n        const clientToken = info.clientToken\r\n        setInfo({clientToken})\r\n    }\r\n})\r\n    } \r\n\r\n    const onPurchase = () => {\r\n        setInfo({loading:true})\r\n        let nonce;\r\n        let getNonce = info.instance.requestPaymentMethod()\r\n        .then(data => {\r\n            nonce=data.nonce\r\n            console.log('INFO' + nonce)\r\n\r\n            const paymentData = {\r\n            paymentMethodNonce:nonce,\r\n            amount:getAmount()\r\n        }\r\n        console.log(\"Success\" + paymentData)\r\n\r\n        processPayment(userId,token,paymentData)\r\n        .then(response => {\r\n            setInfo({...info,success:response.success,loading:false})\r\n      console.log(\"Success\")\r\n        \r\n    const orderData = {\r\n        products:products,\r\n        transction_id:response.transaction.id,\r\n        amount:response.transaction.amount\r\n    };\r\n    \r\n    createOrder(userId,token,orderData)\r\n})\r\n        cartEmpty(() => {\r\n            console.log(\"Did we got a crash ?\")\r\n        })\r\n        setreload(!reload)\r\n    }) \r\n        .catch(error => {\r\n            setInfo({loading: false,success:false})\r\nconsole.log(error)\r\n        \r\n        })\r\n    \r\n    }\r\n    \r\nconst showbtdropIn = () => {\r\n   console.log(info.clientToken)\r\n   let messege;\r\n   if(info.clientToken === undefined){\r\n       messege=(<h2>Please Login First.</h2>)\r\n   } \r\n   else{\r\n    messege=(<h2>Your Shopping Cart is empty.</h2>)\r\n   }\r\n   \r\n   return (\r\n        <div>\r\n \r\n<<<<<<< HEAD\r\n{info.clientToken !== null &&  products.length > 0 ? (\r\n=======\r\n{info.clientToken !== null && products.length > 0 ? (\r\n>>>>>>> d8c760ba12ed9ac506a6a0934d1cf8cf558ff9e3\r\n    <div>\r\n    <DropIn\r\n      options={{ authorization: info.clientToken }}\r\n      onInstance={(instance) => (info.instance = instance)}\r\n    />\r\n    <button className=\"btn btn-success btn-block\" onClick={onPurchase}>Buy</button>\r\n  </div>\r\n ):messege}\r\n    \r\n        </div>\r\n    )\r\n}\r\n\r\n    useEffect(() => {\r\n// console.log(userId,token)\r\n        getToken(userId,token);\r\n    }, [])\r\n\r\n\r\n\r\nconst getAmount = () =>{\r\n    let amount = 0\r\nconsole.log(\"getting\")\r\n    products.map(p => {\r\n        amount = amount + p.price\r\n    })\r\n    return amount\r\n}\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h3>Your bill is {getAmount()}</h3>\r\n        {showbtdropIn()}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PaymentB\r\n",["13","14"],"C:\\Users\\dell\\Downloads\\MERNBootcamp-20201217T073832Z-001\\MERNBootcamp\\projfrontend\\src\\admin\\ManageCatogories.js",["15"],{"ruleId":null,"fatal":true,"severity":2,"message":"16","line":90,"column":2},{"ruleId":"17","replacedBy":"18"},{"ruleId":"19","replacedBy":"20"},{"ruleId":"21","severity":1,"message":"22","line":55,"column":34,"nodeType":"23","messageId":"24","endLine":55,"endColumn":35},"Parsing error: Unexpected token\n\n\u001b[0m \u001b[90m 88 | \u001b[39m        \u001b[33m<\u001b[39m\u001b[33mdiv\u001b[39m\u001b[33m>\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 89 | \u001b[39m \u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 90 | \u001b[39m\u001b[33m<<\u001b[39m\u001b[33m<<\u001b[39m\u001b[33m<<\u001b[39m\u001b[33m<\u001b[39m \u001b[33mHEAD\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m    | \u001b[39m \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 91 | \u001b[39m{info\u001b[33m.\u001b[39mclientToken \u001b[33m!==\u001b[39m \u001b[36mnull\u001b[39m \u001b[33m&&\u001b[39m  products\u001b[33m.\u001b[39mlength \u001b[33m>\u001b[39m \u001b[35m0\u001b[39m \u001b[33m?\u001b[39m (\u001b[0m\n\u001b[0m \u001b[90m 92 | \u001b[39m\u001b[33m===\u001b[39m\u001b[33m===\u001b[39m\u001b[33m=\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 93 | \u001b[39m{info\u001b[33m.\u001b[39mclientToken \u001b[33m!==\u001b[39m \u001b[36mnull\u001b[39m \u001b[33m&&\u001b[39m products\u001b[33m.\u001b[39mlength \u001b[33m>\u001b[39m \u001b[35m0\u001b[39m \u001b[33m?\u001b[39m (\u001b[0m","no-native-reassign",["25"],"no-negated-in-lhs",["26"],"no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","no-global-assign","no-unsafe-negation"]